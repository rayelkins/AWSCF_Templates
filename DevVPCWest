AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation dev account template. This template creates a VPC in
  us-west region Oregon with 3 AZ's & 2 subnets per AZ. A private subnet and  a
  public subnet. CIDR for VPC is 10.0.0.0/16. 
Parameters:
  BucketName:
    Type: String
    Description: The name of the S3 Bucket to create  
Resources:
  VPCWest:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      InstanceTenancy: default
  dot1Public:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCWest
      AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: us-west-2a
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: 'true'
  dot2Private:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCWest
      AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: us-west-2a
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: 'false'
  dot3Public:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCWest
      AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: us-west-2b
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: 'true'
  dot4Private:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCWest
      AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: us-west-2b
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: 'false'
  dot5Public:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCWest
      AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: us-west-2c
      CidrBlock: 10.0.5.0/24
      MapPublicIpOnLaunch: 'true'
  dot6Private:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCWest
      AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: us-west-2b
      CidrBlock: 10.0.6.0/24
      MapPublicIpOnLaunch: 'false'
  WestIGW:
    Type: 'AWS::EC2::InternetGateway'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5913f6d3-f673-40a3-ad02-e1ac0fd14309
  AttachWestIGW:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPCWest
      InternetGatewayId: !Ref WestIGW
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCWest
  RTASSOC1Public:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref dot1Public
      RouteTableId: !Ref RouteTable
  RTASSOC3Public:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref dot3Public
  RTASSOC5Public:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref dot5Public
  defaultRoute:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - WestIGW
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref WestIGW
      RouteTableId: !Ref RouteTable
  PublicNACL:    
    Type: 'AWS::EC2::NetworkAcl'
    Properties: 
      VpcId: !Ref VPCWest
      Tags:
        - Key: Network
          Value: Public
  inboundHTTPSPublicNACLEntry:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
         NetworkAclId: !Ref PublicNACL
         RuleNumber: '100'
         Protocol: '6'
         RuleAction: allow
         Egress: 'false'
         CidrBlock: 0.0.0.0/0
         PortRange:
          From: '80'
          To: '80'
  inboundHTTPSPublicNACLEntry:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
         NetworkAclId: !Ref PublicNACL
         RuleNumber: '110'
         Protocol: '6'
         RuleAction: allow
         Egress: 'false'
         CidrBlock: 0.0.0.0/0
         PortRange:
          From: '443'
          To: '443'
  InboundSSHPublicNetworkAclEntry:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref PublicNACL
      RuleNumber: '120'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '22'
        To: '22'
  InboundEmphemeralPublicNetworkAclEntry:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref PublicNACL
      RuleNumber: '130'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '1024'
        To: '65535'
  OutboundPublicNetworkAclEntry:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref PublicNACL
      RuleNumber: '100'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '0'
        To: '65535'
  PublicSubnetNetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref dot1Public
      SubnetId: !Ref dot3Public
      SubnetId: !Ref dot5Public
      NetworkAclId: !Ref PublicNACL
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Ref BucketName
      AccessControl: BucketOwnerFullControl
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
